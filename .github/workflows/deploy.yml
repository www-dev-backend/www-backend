# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: SSH 접속 구성
      run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/www_backend.pem
          sudo chmod 600 ~/.ssh/www_backend.pem
          echo "$KNOWN_HOSTS" > ~/.ssh/known_hosts
          pwd && cd ~/.ssh/ && ls -al
          cd ~/ && ls -al
      shell: bash
      env:
        SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
        SSH_KNOWN_HOSTS: ${{secrets.KNOWN_HOSTS}}

    - name: AWS RDS Security Group Add IP
      uses: sohelamin/aws-security-group-add-ip-action@v1.0.1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: 'ap-northeast-2'
        aws-security-group-id: ${{ secrets.AWS_RDS_SECURITY_GROUP_ID }}
        port: ${{ secrets.DB_PORT }}
        to-port: ''
        protocol: 'tcp'
        description: 'GitHub Action'

    - name: AWS EC2 Security Group Add IP
      uses: sohelamin/aws-security-group-add-ip-action@v1.0.1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: 'ap-northeast-2'
        aws-security-group-id: ${{ secrets.AWS_EC2_SECURITY_GROUP_ID }}
        port: ${{ secrets.DB_PORT }}
        to-port: ''
        protocol: 'tcp'
        description: 'GitHub Action'


      # Caching dependencies
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      env:
        profile: prod
        AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{ secrets.DB_PORT }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

    - name: SSH 접속 구성
      run: |
          ls -al && cd ~/ && ls -al
      shell: bash

    - name: SCP Command to Transfer Files
      uses: appleboy/scp-action@v0.1.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        port: ${{ secrets.SSH_PORT }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: "target/*.jar"
        target: "www-backend/target"

